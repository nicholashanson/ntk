#ifndef TLS_HANDSHAKE_PACKETS_HPP
#define TLS_HANDSHAKE_PACKETS_HPP

namespace test_constants {
    
    inline const unsigned char tls_client_hello_packet[] = {

        /* ethernet header */
        0x04, 0x81, 0x9b, 0x17, 0x26, 0x81, 
        0x14, 0xf6, 0xd8, 0xaa, 0x69, 0xfa, 
        0x08, 0x00,                                     // ether-type = ipv4 
        
        /* ipv4 header */
        0x45,                                           // version (4) + IHL ( 5 )
        0x00,                                           // DSCP + ECN
        0x01, 0x7d,                                     // total length = 381 bytes
        0x5b, 0x45,                                     // identification
        0x40, 0x00,                                     // flags + fragment offset
        0x40,                                           // TTL = 64
        0x06,                                           // protocol = TCP
        0x9f, 0x7b,                                     // header checksum
        0xc0, 0xa8, 0x00, 0x15,                         // source IP = 192.168.0.21
        0x68, 0x16, 0x15, 0xe7,                         // destination IP = 104.22.21.231

        /* TCP header */
        0xa5, 0xfc,                                     // source port
        0x01, 0xbb,                                     // destination port ( 443 )
        0xe0, 0x6a, 0xe1, 0x50,                         // sequence number
        0xc9, 0x49, 0x14, 0xc6,                         // acknowledgment number
        0x80, 0x18,                                     // data offset + flags ( PSH, ACK )
        0x01, 0xf6,                                     // window size
        0x40, 0x2a,                                     // checksum
        0x00, 0x00,                                     // urgent pointer

        /* TCP options */
        0x01,                                                       // NOP
        0x01,                                                       // NOP
        0x08, 0x0a, 0x86, 0x9c, 0x55, 0x17, 0xb8, 0xad, 0xff, 0x5a, // timestamp

        /* TLS record layer */
        0x16,                                           // content-type = handshake ( 22 )
        0x03, 0x01,                                     // TLS version 3.1 ( TLS 1.0 )
        0x01, 0x44,                                     // length = 324 bytes

        // TLS handshake header
        0x01,                                           // handshake-type = Client Hello (1)
        0x00, 0x01, 0x40,                               // handshake-length = 320 bytes

        0x03, 0x03,                                     // TLS version = 1.2

        // random ( 32 bytes )
        0x7b, 0xa9, 0x00, 0xc7, 0x05, 0x7e, 0x9e, 0x5d,
        0x06, 0x09, 0xc0, 0x4b, 0x66, 0xf5, 0x6e, 0x1b,
        0x30, 0x03, 0xcd, 0x69, 0x06, 0xde, 0xa3, 0xce,
        0xc0, 0x57, 0xf8, 0xf7, 0x33, 0xcc, 0x71, 0x02,

        0x20,                                           // session ID length = 32

        /* session ID ( 32 bytes ) */
        0x73, 0xa6, 0xf6, 0x97, 0x70, 0x49, 0xaf, 0x51,
        0x60, 0x80, 0x1e, 0x62, 0x21, 0xd2, 0x5c, 0x8e,
        0x4a, 0x50, 0x2f, 0x7e, 0xdc, 0xdd, 0xae, 0x57,
        0x12, 0xb9, 0x0c, 0xbc, 0xde, 0x75, 0xd0, 0x9a,

        0x00, 0x3e,                                     // cipher suites length = 62 bytes

        /* cipher suites ( 31 x 2 bytes ) */
        0x13, 0x02, 0x13, 0x03, 0x13, 0x01,
        0xc0, 0x2c, 0xc0, 0x30, 0x00, 0x9f, 0xcc, 0xa9,
        0xcc, 0xa8, 0xcc, 0xaa, 0xc0, 0x2b, 0xc0, 0x2f,
        0x00, 0x9e, 0xc0, 0x24, 0xc0, 0x28, 0x00, 0x6b,
        0xc0, 0x23, 0xc0, 0x27, 0x00, 0x67, 0xc0, 0x0a,
        0xc0, 0x14, 0x00, 0x39, 0xc0, 0x09, 0xc0, 0x13,
        0x00, 0x33, 0x00, 0x9d, 0x00, 0x9c, 0x00, 0x3d,
        0x00, 0x3c, 0x00, 0x35, 0x00, 0x2f, 0x00, 0xff,

        0x01,                                           // compression methods length = 1,
        0x00,                                           // method = null ( 0 )

        0x00, 0xb9,                                     // extensions length = 185 bytes

        0x00, 0x00,                                     // extension-type = SNI
        0x00, 0x11,                                     // extension-length ( 17 )
        0x00, 0x0f,                                     // server name list length = 15 
        0x00,                                           // name type = host name 
        0x00, 0x0c,                                     // name length = 12 bytes
        0x65, 0x61, 0x72, 0x74, 0x68, 0x63, 0x61, 0x6d, // earthcam
        0x2e, 0x63, 0x6f, 0x6d,                         // .com

        0x00, 0x0b,                                     // extension-type: EC point formats
        0x00, 0x04,                                     // extension-length: 4
        0x03, 0x00, 0x01, 0x02,                         // ec point formats

        0x00, 0x0a,                                     // supported groups ( elliptic curves ) 
        0x00, 0x16,                                     // length 22
        0x00, 0x14,                                     // named group list length: 20
        0x00, 0x1d, 0x00, 0x17, 0x00, 0x1e,
        0x00, 0x19, 0x00, 0x18, 0x01, 0x00, 0x01, 0x01,
        0x01, 0x02, 0x01, 0x03, 0x01, 0x04,

        0x00, 0x23,                                     // signature algorithms extension
        0x00, 0x00,                                     // length 0

        0x00, 0x16, 0x00, 0x00, 0x00, 0x17, 

        0x00, 0x00, 
        0x00, 0x0d,                                     // extension length = 185 bytes
        0x00, 0x30, 0x00, 0x2e,
        0x04, 0x03, 0x05, 0x03, 0x06, 0x03, 0x08, 0x07,
        0x08, 0x08, 0x08, 0x1a, 0x08, 0x1b, 0x08, 0x1c,
        0x08, 0x09, 0x08, 0x0a, 0x08, 0x0b, 0x08, 0x04,
        0x08, 0x05, 0x08, 0x06, 0x04, 0x01, 0x05, 0x01,
        0x06, 0x01, 0x03, 0x03, 0x03, 0x01, 0x03, 0x02,
        0x04, 0x02, 0x05, 0x02, 0x06, 0x02,

        0x00, 0x2b, 0x00, 0x05, 0x04, 0x03, 0x04, 0x03,
        0x03, 0x00, 0x2d, 0x00, 0x02, 0x01, 0x01,

        0x00, 0x33, 0x00, 0x26, 0x00, 0x24, 0x00, 0x1d,
        0x00, 0x20, 0xea, 0x53, 0x81, 0xef, 0x09, 0x73,
        0x18, 0x54, 0xc7, 0x89, 0xbf, 0x76, 0x4e, 0x85,
        0x5f, 0xf9, 0xb8, 0x3a, 0x61, 0x10, 0xc3, 0x19,
        0x9b, 0x86, 0xdb, 0xdb, 0x29, 0x01, 0x5d, 0xbe,
        0x77, 0x3b,

        0x00, 0x1b, 0x00, 0x05, 0x04, 0x00, 0x01, 0x00,
        0x03
    };

    inline const unsigned char tls_server_hello_packet[] = {

        /* TLS Record Header */
        0x16,                         // Content Type: Handshake (22)
        0x03, 0x03,                   // TLS Version: 1.2
        0x00, 0x7a,                   // Length: 122 bytes

        /* Handshake Header */
        0x02,                         // Handshake Type: Server Hello (2)
        0x00, 0x00, 0x76,             // Length: 118 bytes

        /* Server Version */
        0x03, 0x03,                   // TLS Version: 1.2

        /* Random (32 bytes) */
        0x97, 0xbd, 0xc7, 0x2e, 0x7c, 0x09, 0xb9, 0x89,
        0x41, 0x85, 0x30, 0x56, 0x88, 0xc2, 0x53, 0xa1,
        0x19, 0x71, 0x59, 0xdf, 0xc3, 0x5e, 0x56, 0xbf,
        0x35, 0x29, 0x80, 0xfe, 0x55, 0xc1, 0x4e, 0x31,

        /* Session ID */
        0x20,                         // Session ID length: 32
        0x73, 0xa6, 0xf6, 0x97, 0x70, 0x49, 0xaf, 0x51,
        0x60, 0x80, 0x1e, 0x62, 0x21, 0xd2, 0x5c, 0x8e,
        0x4a, 0x50, 0x2f, 0x7e, 0xdc, 0xdd, 0xae, 0x57,
        0x12, 0xb9, 0x0c, 0xbc, 0xde, 0x75, 0xd0, 0x9a,

        /* Cipher Suite */
        0x13, 0x02,                   // TLS_AES_256_GCM_SHA384 (0x1302)

        /* Compression Method */
        0x00,                         // Compression: null

        /* Extensions Length */
        0x00, 0x2e,                   // Extensions length: 46 bytes

        /* Extension: Supported Versions */
        0x00, 0x33,                   // Extension Type: Supported Versions (0x0033)
        0x00, 0x24,                   // Extension Length: 36
        0x00, 0x1d,                   // Group: x25519 (0x001d)
        0x00, 0x20,                   // Key Exchange Length: 32
        0xd0, 0x88, 0x75, 0x9b, 0xf6, 0x40, 0xbe, 0x95,
        0x01, 0x47, 0xde, 0xa7, 0x79, 0xe0, 0x08, 0x96,
        0x03, 0xfb, 0x39, 0x84, 0xb3, 0x42, 0x64, 0x1e,
        0x91, 0xcb, 0x8b, 0x7d, 0x43, 0x19, 0x86, 0x7f,

        /* Extension: Supported Groups (GREASE) */
        0x00, 0x2b,                   // Extension Type: Supported Groups (0x002b)
        0x00, 0x02,                   // Extension Length: 2
        0x03, 0x04                    // Supported Version: TLS 1.3
    };

} // namespace test_constants

#endif